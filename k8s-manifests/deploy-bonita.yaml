apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: bonita
  name: bonita
  namespace: bonita
spec:
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
      nodePort: 30000
  selector:
    app: bonita
  type: NodePort
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: bonita
  name: bonita
  namespace: bonita
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bonita
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: bonita
    spec:
      initContainers:
        - name: init-scripts
          image: alpine
          command:
            [
              "sh",
              "-c",
              "cp /scripts/* /custom-init/ && chmod +x /custom-init/*",
            ]
          volumeMounts:
            - name: custom-init-scripts
              mountPath: /custom-init
            - name: script-config
              mountPath: /scripts
      containers:
        - image: bonita:2023.2-u0
          name: bonita
          ports:
            - containerPort: 8080
              name: bonita-port
          envFrom:
            - configMapRef:
                name: db-connect-config
            - secretRef:
                name: bonita-credentials
          volumeMounts:
            - name: custom-init-scripts
              mountPath: /opt/custom-init.d
          resources: {}
          livenessProbe:
            httpGet:
              path: / #in subscription edition we should use the /bonita/healthz
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 20
      volumes:
        - name: custom-init-scripts
          emptyDir: {}
        - name: script-config
          configMap:
            name: bonita-custom-init
status: {}
